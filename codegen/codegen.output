Nonterminals useless in grammar

   str_l


Terminals unused in grammar

   PLUS
   MINUS
   TIMES
   DIVIDE
   SMALLER
   SMALLEREQ
   GREATER
   GREATEREQ
   EQEQ
   PARAM
   COMMA
   PUSH


Rules useless in grammar

   61 str_l: STR_LIT


Grammar

    0 $accept: lines $end

    1 lines: lines line
    2      | line

    3 line: binary
    4     | unary
    5     | copy
    6     | conditional_jump
    7     | unconditional_jump
    8     | function_call
    9     | indexed_copy
   10     | address_pointer_assignment
   11     | label1
   12     | fun_begin
   13     | para_num
   14     | fun_end
   15     | return_stmt
   16     | pushargs
   17     | save_to_v0
   18     | load_from_v0
   19     | outint
   20     | inint
   21     | outfloat
   22     | infloat
   23     | outstring
   24     | instring

   25 inint: ININT identifier

   26 infloat: INFLOAT identifier

   27 instring: INSTRING identifier

   28 outint: OUTINT identifiernum

   29 outfloat: OUTFLOAT identifiernum

   30 outstring: OUTSTRING STR_LIT

   31 fun_begin: label FUNCBEGIN

   32 save_to_v0: V0 EQ identifiernum

   33 load_from_v0: identifier EQ V0

   34 fun_end: FUNCEND num

   35 para_num: PARAMSNUM num

   36 return_stmt: RETURN

   37 binary: identifier EQ identifiernum binary_ops identifiernum

   38 identifiernum: identifier
   39              | num

   40 binary_ops: BINARY_OPERATORS

   41 identifier: ID

   42 num: NUM

   43 label: LABEL

   44 unary: identifier EQ UNARY_OPS identifier

   45 copy: identifier EQ identifier
   46     | identifier EQ num

   47 label1: label

   48 conditional_jump: IF identifier GOTO label
   49                 | IF num GOTO label

   50 unconditional_jump: GOTO label

   51 function_call: CALL identifier

   52 pushargs: PUSHARGS identifier
   53         | PUSHARGS num

   54 indexed_copy: identifier EQ identifier LEFTSQPAR num RIGSQPAR
   55             | identifier EQ identifier LEFTSQPAR identifier RIGSQPAR

   56 address_pointer_assignment: STAR identifier EQ identifier
   57                           | identifier EQ STAR identifier
   58                           | identifier EQ ANDP identifier
   59                           | ANDP identifier EQ identifier
   60                           | STAR identifier EQ num


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 42
ID (259) 41
EQ (260) 32 33 37 44 45 46 54 55 56 57 58 59 60
FUNCBEGIN (261) 31
FUNCEND (262) 34
PARAMSNUM (263) 35
RETURN (264) 36
PUSHARGS (265) 52 53
V0 (266) 32 33
STR_LIT (267) 30
BINARY_OPERATORS (268) 40
PLUS (269)
MINUS (270)
TIMES (271)
DIVIDE (272)
SMALLER (273)
SMALLEREQ (274)
GREATER (275)
GREATEREQ (276)
EQEQ (277)
IF (278) 48 49
GOTO (279) 48 49 50
LABEL (280) 43
PARAM (281)
CALL (282) 51
COMMA (283)
LEFTSQPAR (284) 54 55
RIGSQPAR (285) 54 55
STAR (286) 56 57 60
ANDP (287) 58 59
UNARY_OPS (288) 44
PUSH (289)
OUTSTRING (290) 30
INSTRING (291) 27
OUTINT (292) 28
ININT (293) 25
OUTFLOAT (294) 29
INFLOAT (295) 26


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
lines (42)
    on left: 1 2, on right: 0 1
line (43)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24, on right: 1 2
inint (44)
    on left: 25, on right: 20
infloat (45)
    on left: 26, on right: 22
instring (46)
    on left: 27, on right: 24
outint (47)
    on left: 28, on right: 19
outfloat (48)
    on left: 29, on right: 21
outstring (49)
    on left: 30, on right: 23
fun_begin (50)
    on left: 31, on right: 12
save_to_v0 (51)
    on left: 32, on right: 17
load_from_v0 (52)
    on left: 33, on right: 18
fun_end (53)
    on left: 34, on right: 14
para_num (54)
    on left: 35, on right: 13
return_stmt (55)
    on left: 36, on right: 15
binary (56)
    on left: 37, on right: 3
identifiernum (57)
    on left: 38 39, on right: 28 29 32 37
binary_ops (58)
    on left: 40, on right: 37
identifier (59)
    on left: 41, on right: 25 26 27 33 37 38 44 45 46 48 51 52 54 55
    56 57 58 59 60
num (60)
    on left: 42, on right: 34 35 39 46 49 53 54 60
label (61)
    on left: 43, on right: 31 47 48 49 50
unary (62)
    on left: 44, on right: 4
copy (63)
    on left: 45 46, on right: 5
label1 (64)
    on left: 47, on right: 11
conditional_jump (65)
    on left: 48 49, on right: 6
unconditional_jump (66)
    on left: 50, on right: 7
function_call (67)
    on left: 51, on right: 8
pushargs (68)
    on left: 52 53, on right: 16
indexed_copy (69)
    on left: 54 55, on right: 9
address_pointer_assignment (70)
    on left: 56 57 58 59 60, on right: 10


State 0

    0 $accept: . lines $end

    ID         shift, and go to state 1
    FUNCEND    shift, and go to state 2
    PARAMSNUM  shift, and go to state 3
    RETURN     shift, and go to state 4
    PUSHARGS   shift, and go to state 5
    V0         shift, and go to state 6
    IF         shift, and go to state 7
    GOTO       shift, and go to state 8
    LABEL      shift, and go to state 9
    CALL       shift, and go to state 10
    STAR       shift, and go to state 11
    ANDP       shift, and go to state 12
    OUTSTRING  shift, and go to state 13
    INSTRING   shift, and go to state 14
    OUTINT     shift, and go to state 15
    ININT      shift, and go to state 16
    OUTFLOAT   shift, and go to state 17
    INFLOAT    shift, and go to state 18

    lines                       go to state 19
    line                        go to state 20
    inint                       go to state 21
    infloat                     go to state 22
    instring                    go to state 23
    outint                      go to state 24
    outfloat                    go to state 25
    outstring                   go to state 26
    fun_begin                   go to state 27
    save_to_v0                  go to state 28
    load_from_v0                go to state 29
    fun_end                     go to state 30
    para_num                    go to state 31
    return_stmt                 go to state 32
    binary                      go to state 33
    identifier                  go to state 34
    label                       go to state 35
    unary                       go to state 36
    copy                        go to state 37
    label1                      go to state 38
    conditional_jump            go to state 39
    unconditional_jump          go to state 40
    function_call               go to state 41
    pushargs                    go to state 42
    indexed_copy                go to state 43
    address_pointer_assignment  go to state 44


State 1

   41 identifier: ID .

    $default  reduce using rule 41 (identifier)


State 2

   34 fun_end: FUNCEND . num

    NUM  shift, and go to state 45

    num  go to state 46


State 3

   35 para_num: PARAMSNUM . num

    NUM  shift, and go to state 45

    num  go to state 47


State 4

   36 return_stmt: RETURN .

    $default  reduce using rule 36 (return_stmt)


State 5

   52 pushargs: PUSHARGS . identifier
   53         | PUSHARGS . num

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifier  go to state 48
    num         go to state 49


State 6

   32 save_to_v0: V0 . EQ identifiernum

    EQ  shift, and go to state 50


State 7

   48 conditional_jump: IF . identifier GOTO label
   49                 | IF . num GOTO label

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifier  go to state 51
    num         go to state 52


State 8

   50 unconditional_jump: GOTO . label

    LABEL  shift, and go to state 9

    label  go to state 53


State 9

   43 label: LABEL .

    $default  reduce using rule 43 (label)


State 10

   51 function_call: CALL . identifier

    ID  shift, and go to state 1

    identifier  go to state 54


State 11

   56 address_pointer_assignment: STAR . identifier EQ identifier
   60                           | STAR . identifier EQ num

    ID  shift, and go to state 1

    identifier  go to state 55


State 12

   59 address_pointer_assignment: ANDP . identifier EQ identifier

    ID  shift, and go to state 1

    identifier  go to state 56


State 13

   30 outstring: OUTSTRING . STR_LIT

    STR_LIT  shift, and go to state 57


State 14

   27 instring: INSTRING . identifier

    ID  shift, and go to state 1

    identifier  go to state 58


State 15

   28 outint: OUTINT . identifiernum

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifiernum  go to state 59
    identifier     go to state 60
    num            go to state 61


State 16

   25 inint: ININT . identifier

    ID  shift, and go to state 1

    identifier  go to state 62


State 17

   29 outfloat: OUTFLOAT . identifiernum

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifiernum  go to state 63
    identifier     go to state 60
    num            go to state 61


State 18

   26 infloat: INFLOAT . identifier

    ID  shift, and go to state 1

    identifier  go to state 64


State 19

    0 $accept: lines . $end
    1 lines: lines . line

    $end       shift, and go to state 65
    ID         shift, and go to state 1
    FUNCEND    shift, and go to state 2
    PARAMSNUM  shift, and go to state 3
    RETURN     shift, and go to state 4
    PUSHARGS   shift, and go to state 5
    V0         shift, and go to state 6
    IF         shift, and go to state 7
    GOTO       shift, and go to state 8
    LABEL      shift, and go to state 9
    CALL       shift, and go to state 10
    STAR       shift, and go to state 11
    ANDP       shift, and go to state 12
    OUTSTRING  shift, and go to state 13
    INSTRING   shift, and go to state 14
    OUTINT     shift, and go to state 15
    ININT      shift, and go to state 16
    OUTFLOAT   shift, and go to state 17
    INFLOAT    shift, and go to state 18

    line                        go to state 66
    inint                       go to state 21
    infloat                     go to state 22
    instring                    go to state 23
    outint                      go to state 24
    outfloat                    go to state 25
    outstring                   go to state 26
    fun_begin                   go to state 27
    save_to_v0                  go to state 28
    load_from_v0                go to state 29
    fun_end                     go to state 30
    para_num                    go to state 31
    return_stmt                 go to state 32
    binary                      go to state 33
    identifier                  go to state 34
    label                       go to state 35
    unary                       go to state 36
    copy                        go to state 37
    label1                      go to state 38
    conditional_jump            go to state 39
    unconditional_jump          go to state 40
    function_call               go to state 41
    pushargs                    go to state 42
    indexed_copy                go to state 43
    address_pointer_assignment  go to state 44


State 20

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 21

   20 line: inint .

    $default  reduce using rule 20 (line)


State 22

   22 line: infloat .

    $default  reduce using rule 22 (line)


State 23

   24 line: instring .

    $default  reduce using rule 24 (line)


State 24

   19 line: outint .

    $default  reduce using rule 19 (line)


State 25

   21 line: outfloat .

    $default  reduce using rule 21 (line)


State 26

   23 line: outstring .

    $default  reduce using rule 23 (line)


State 27

   12 line: fun_begin .

    $default  reduce using rule 12 (line)


State 28

   17 line: save_to_v0 .

    $default  reduce using rule 17 (line)


State 29

   18 line: load_from_v0 .

    $default  reduce using rule 18 (line)


State 30

   14 line: fun_end .

    $default  reduce using rule 14 (line)


State 31

   13 line: para_num .

    $default  reduce using rule 13 (line)


State 32

   15 line: return_stmt .

    $default  reduce using rule 15 (line)


State 33

    3 line: binary .

    $default  reduce using rule 3 (line)


State 34

   33 load_from_v0: identifier . EQ V0
   37 binary: identifier . EQ identifiernum binary_ops identifiernum
   44 unary: identifier . EQ UNARY_OPS identifier
   45 copy: identifier . EQ identifier
   46     | identifier . EQ num
   54 indexed_copy: identifier . EQ identifier LEFTSQPAR num RIGSQPAR
   55             | identifier . EQ identifier LEFTSQPAR identifier RIGSQPAR
   57 address_pointer_assignment: identifier . EQ STAR identifier
   58                           | identifier . EQ ANDP identifier

    EQ  shift, and go to state 67


State 35

   31 fun_begin: label . FUNCBEGIN
   47 label1: label .

    FUNCBEGIN  shift, and go to state 68

    $default  reduce using rule 47 (label1)


State 36

    4 line: unary .

    $default  reduce using rule 4 (line)


State 37

    5 line: copy .

    $default  reduce using rule 5 (line)


State 38

   11 line: label1 .

    $default  reduce using rule 11 (line)


State 39

    6 line: conditional_jump .

    $default  reduce using rule 6 (line)


State 40

    7 line: unconditional_jump .

    $default  reduce using rule 7 (line)


State 41

    8 line: function_call .

    $default  reduce using rule 8 (line)


State 42

   16 line: pushargs .

    $default  reduce using rule 16 (line)


State 43

    9 line: indexed_copy .

    $default  reduce using rule 9 (line)


State 44

   10 line: address_pointer_assignment .

    $default  reduce using rule 10 (line)


State 45

   42 num: NUM .

    $default  reduce using rule 42 (num)


State 46

   34 fun_end: FUNCEND num .

    $default  reduce using rule 34 (fun_end)


State 47

   35 para_num: PARAMSNUM num .

    $default  reduce using rule 35 (para_num)


State 48

   52 pushargs: PUSHARGS identifier .

    $default  reduce using rule 52 (pushargs)


State 49

   53 pushargs: PUSHARGS num .

    $default  reduce using rule 53 (pushargs)


State 50

   32 save_to_v0: V0 EQ . identifiernum

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifiernum  go to state 69
    identifier     go to state 60
    num            go to state 61


State 51

   48 conditional_jump: IF identifier . GOTO label

    GOTO  shift, and go to state 70


State 52

   49 conditional_jump: IF num . GOTO label

    GOTO  shift, and go to state 71


State 53

   50 unconditional_jump: GOTO label .

    $default  reduce using rule 50 (unconditional_jump)


State 54

   51 function_call: CALL identifier .

    $default  reduce using rule 51 (function_call)


State 55

   56 address_pointer_assignment: STAR identifier . EQ identifier
   60                           | STAR identifier . EQ num

    EQ  shift, and go to state 72


State 56

   59 address_pointer_assignment: ANDP identifier . EQ identifier

    EQ  shift, and go to state 73


State 57

   30 outstring: OUTSTRING STR_LIT .

    $default  reduce using rule 30 (outstring)


State 58

   27 instring: INSTRING identifier .

    $default  reduce using rule 27 (instring)


State 59

   28 outint: OUTINT identifiernum .

    $default  reduce using rule 28 (outint)


State 60

   38 identifiernum: identifier .

    $default  reduce using rule 38 (identifiernum)


State 61

   39 identifiernum: num .

    $default  reduce using rule 39 (identifiernum)


State 62

   25 inint: ININT identifier .

    $default  reduce using rule 25 (inint)


State 63

   29 outfloat: OUTFLOAT identifiernum .

    $default  reduce using rule 29 (outfloat)


State 64

   26 infloat: INFLOAT identifier .

    $default  reduce using rule 26 (infloat)


State 65

    0 $accept: lines $end .

    $default  accept


State 66

    1 lines: lines line .

    $default  reduce using rule 1 (lines)


State 67

   33 load_from_v0: identifier EQ . V0
   37 binary: identifier EQ . identifiernum binary_ops identifiernum
   44 unary: identifier EQ . UNARY_OPS identifier
   45 copy: identifier EQ . identifier
   46     | identifier EQ . num
   54 indexed_copy: identifier EQ . identifier LEFTSQPAR num RIGSQPAR
   55             | identifier EQ . identifier LEFTSQPAR identifier RIGSQPAR
   57 address_pointer_assignment: identifier EQ . STAR identifier
   58                           | identifier EQ . ANDP identifier

    NUM        shift, and go to state 45
    ID         shift, and go to state 1
    V0         shift, and go to state 74
    STAR       shift, and go to state 75
    ANDP       shift, and go to state 76
    UNARY_OPS  shift, and go to state 77

    identifiernum  go to state 78
    identifier     go to state 79
    num            go to state 80


State 68

   31 fun_begin: label FUNCBEGIN .

    $default  reduce using rule 31 (fun_begin)


State 69

   32 save_to_v0: V0 EQ identifiernum .

    $default  reduce using rule 32 (save_to_v0)


State 70

   48 conditional_jump: IF identifier GOTO . label

    LABEL  shift, and go to state 9

    label  go to state 81


State 71

   49 conditional_jump: IF num GOTO . label

    LABEL  shift, and go to state 9

    label  go to state 82


State 72

   56 address_pointer_assignment: STAR identifier EQ . identifier
   60                           | STAR identifier EQ . num

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifier  go to state 83
    num         go to state 84


State 73

   59 address_pointer_assignment: ANDP identifier EQ . identifier

    ID  shift, and go to state 1

    identifier  go to state 85


State 74

   33 load_from_v0: identifier EQ V0 .

    $default  reduce using rule 33 (load_from_v0)


State 75

   57 address_pointer_assignment: identifier EQ STAR . identifier

    ID  shift, and go to state 1

    identifier  go to state 86


State 76

   58 address_pointer_assignment: identifier EQ ANDP . identifier

    ID  shift, and go to state 1

    identifier  go to state 87


State 77

   44 unary: identifier EQ UNARY_OPS . identifier

    ID  shift, and go to state 1

    identifier  go to state 88


State 78

   37 binary: identifier EQ identifiernum . binary_ops identifiernum

    BINARY_OPERATORS  shift, and go to state 89

    binary_ops  go to state 90


State 79

   38 identifiernum: identifier .
   45 copy: identifier EQ identifier .
   54 indexed_copy: identifier EQ identifier . LEFTSQPAR num RIGSQPAR
   55             | identifier EQ identifier . LEFTSQPAR identifier RIGSQPAR

    LEFTSQPAR  shift, and go to state 91

    BINARY_OPERATORS  reduce using rule 38 (identifiernum)
    $default          reduce using rule 45 (copy)


State 80

   39 identifiernum: num .
   46 copy: identifier EQ num .

    BINARY_OPERATORS  reduce using rule 39 (identifiernum)
    $default          reduce using rule 46 (copy)


State 81

   48 conditional_jump: IF identifier GOTO label .

    $default  reduce using rule 48 (conditional_jump)


State 82

   49 conditional_jump: IF num GOTO label .

    $default  reduce using rule 49 (conditional_jump)


State 83

   56 address_pointer_assignment: STAR identifier EQ identifier .

    $default  reduce using rule 56 (address_pointer_assignment)


State 84

   60 address_pointer_assignment: STAR identifier EQ num .

    $default  reduce using rule 60 (address_pointer_assignment)


State 85

   59 address_pointer_assignment: ANDP identifier EQ identifier .

    $default  reduce using rule 59 (address_pointer_assignment)


State 86

   57 address_pointer_assignment: identifier EQ STAR identifier .

    $default  reduce using rule 57 (address_pointer_assignment)


State 87

   58 address_pointer_assignment: identifier EQ ANDP identifier .

    $default  reduce using rule 58 (address_pointer_assignment)


State 88

   44 unary: identifier EQ UNARY_OPS identifier .

    $default  reduce using rule 44 (unary)


State 89

   40 binary_ops: BINARY_OPERATORS .

    $default  reduce using rule 40 (binary_ops)


State 90

   37 binary: identifier EQ identifiernum binary_ops . identifiernum

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifiernum  go to state 92
    identifier     go to state 60
    num            go to state 61


State 91

   54 indexed_copy: identifier EQ identifier LEFTSQPAR . num RIGSQPAR
   55             | identifier EQ identifier LEFTSQPAR . identifier RIGSQPAR

    NUM  shift, and go to state 45
    ID   shift, and go to state 1

    identifier  go to state 93
    num         go to state 94


State 92

   37 binary: identifier EQ identifiernum binary_ops identifiernum .

    $default  reduce using rule 37 (binary)


State 93

   55 indexed_copy: identifier EQ identifier LEFTSQPAR identifier . RIGSQPAR

    RIGSQPAR  shift, and go to state 95


State 94

   54 indexed_copy: identifier EQ identifier LEFTSQPAR num . RIGSQPAR

    RIGSQPAR  shift, and go to state 96


State 95

   55 indexed_copy: identifier EQ identifier LEFTSQPAR identifier RIGSQPAR .

    $default  reduce using rule 55 (indexed_copy)


State 96

   54 indexed_copy: identifier EQ identifier LEFTSQPAR num RIGSQPAR .

    $default  reduce using rule 54 (indexed_copy)
