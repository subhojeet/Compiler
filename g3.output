Terminals unused in grammar

   IN
   OUT
   INCR
   DECR
   TYPEDEF
   RES_STR


Grammar

    0 $accept: Start_sym $end

    1 Start_sym: Start1 main_func

    2 Start1: Start1 func_def
    3       | Start1 func_dec
    4       | Start1 ext_dec
    5       | Start2

    6 Start2: Start2 include_dec
    7       | %empty

    8 data_type: INT
    9          | FLOAT
   10          | BOOL
   11          | CHAR
   12          | STRING

   13 include_dec: '#' INCLUDE string
   14            | '#' INCLUDE LESS_OP ID '.' ID GREAT_OP
   15            | '#' INCLUDE LESS_OP ID GREAT_OP
   16            | '#' error

   17 string: STR_LIT

   18 main_func: INT MAIN _LOB param ')' func_compound_stmnt
   19          | INT MAIN _LOB ')' func_compound_stmnt
   20          | VOID MAIN _LOB param ')' func_compound_stmnt
   21          | VOID MAIN _LOB ')' func_compound_stmnt
   22          | %empty
   23          | INT MAIN error
   24          | VOID MAIN error

   25 func_dec: data_type ID _LOB param _ROB semi_comma
   26         | data_type ID _LOB _ROB semi_comma
   27         | VOID ID _LOB param _ROB semi_comma
   28         | VOID ID _LOB _ROB semi_comma
   29         | data_type ID _LOB error
   30         | VOID ID _LOB error

   31 semi_comma: ';'
   32           | error

   33 param: param_list

   34 func_def: data_type ID _LOB param ')' func_compound_stmnt
   35         | data_type ID _LOB ')' func_compound_stmnt
   36         | VOID ID _LOB param ')' func_compound_stmnt
   37         | VOID ID _LOB ')' func_compound_stmnt
   38         | data_type error func_compound_stmnt

   39 micro_val: constant
   40          | ID
   41          | ID '(' ')'
   42          | ID '(' arg_list ')'
   43          | ID '[' expr ']'
   44          | ID '(' error ';'
   45          | ID '[' error

   46 expr: micro_val
   47     | '(' expr ')'
   48     | unary_op expr
   49     | micro_val operators expr
   50     | micro_val assignment_op expr
   51     | '(' expr ')' operators expr
   52     | '(' expr error
   53     | micro_val operators error
   54     | '(' expr ')' operators error
   55     | micro_val ERROR expr
   56     | '(' expr ')' ERROR expr

   57 arg_list: arg_list ',' arg
   58         | arg
   59         | arg_list error

   60 arg: constant
   61    | ID

   62 operators: binary_op
   63          | relational_op
   64          | logical_op
   65          | bit_logical_op

   66 logical_op: AND_OP
   67           | OR_OP

   68 binary_op: '+'
   69          | '-'
   70          | '*'
   71          | '/'
   72          | '%'

   73 assignment_op: '='
   74              | ADD_ASS
   75              | SUB_ASS
   76              | MUL_ASS
   77              | DIV_ASS
   78              | MOD_ASS
   79              | AND_ASS
   80              | XOR_ASS
   81              | OR_ASS

   82 relational_op: LESS_OP
   83              | GREAT_OP
   84              | LESS_EQ_OP
   85              | GREAT_EQ_OP
   86              | EQEQ_OP
   87              | NOTEQ_OP

   88 bit_logical_op: '&'
   89               | '|'
   90               | '^'

   91 unary_op: '!'
   92         | '~'

   93 stmnt_list: stmnt
   94           | stmnt_list stmnt

   95 stmnt: compound_stmnt
   96      | expr_stmnt
   97      | condition_stmnt
   98      | loop_stmnt
   99      | jump_stmnt
  100      | dec
  101      | io_stmnt
  102      | exit_stmnt

  103 io_stmnt: PRINTSTR '(' arg_printstr ')' ';'
  104         | PRINTINT '(' arg_print_int ')' ';'
  105         | PRINTFLOAT '(' arg_print_float ')' ';'
  106         | GETSTRING '(' arg_get_str ')'
  107         | GETFLOAT '(' arg_get_float ')' ';'
  108         | GETINT '(' arg_get_int ')' ';'
  109         | PRINTFLOAT error
  110         | PRINTINT error
  111         | PRINTSTR error
  112         | GETINT error
  113         | GETFLOAT error
  114         | GETSTRING error

  115 arg_print_int: ID
  116              | NUMBER

  117 arg_print_float: ID
  118                | DECIMAL

  119 arg_printstr: ID
  120             | STR_LIT

  121 arg_get_str: ID

  122 arg_get_int: ID

  123 arg_get_float: ID

  124 labeled_stmnt: CASE constant colon
  125              | CASE error

  126 otwise_stmnt: OTHERWISE colon stmnt_list
  127             | OTHERWISE error
  128             | %empty

  129 colon: ':'
  130      | error

  131 func_compound_stmnt: '{' _RCB
  132                    | '{' stmnt_list _RCB
  133                    | '{' stmnt_list error

  134 compound_stmnt: _LCB _RCB
  135               | _LCB stmnt_list _RCB
  136               | _LCB stmnt_list error

  137 _LOB: '('

  138 _ROB: ')'

  139 _LCB: '{'

  140 _RCB: '}'

  141 condition_stmnt: IF '(' expr ')' compound_stmnt
  142                | IF '(' expr ')' compound_stmnt ELSE compound_stmnt
  143                | IF '(' expr ')' compound_stmnt elif_list ELSE compound_stmnt
  144                | IF '(' expr ')' compound_stmnt elif_list
  145                | SWITCH '(' expr ')' '{' switch_stmnt_list '}'
  146                | IF error
  147                | SWITCH error

  148 elif_list: elif_list elseifpart
  149          | elseifpart
  150          | ELIF error

  151 elseifpart: ELIF '(' expr ')' compound_stmnt

  152 switch_stmnt: labeled_stmnt
  153             | stmnt

  154 switch_stmnt_list: switch_stmnt_list1 otwise_stmnt

  155 switch_stmnt_list1: switch_stmnt_list1 switch_stmnt
  156                   | switch_stmnt

  157 loop_stmnt: WHILE '(' expr ')' compound_stmnt
  158           | DO compound_stmnt WHILE '(' expr ')' ';'
  159           | FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt
  160           | WHILE '(' expr ')' error
  161           | WHILE error
  162           | DO error
  163           | FOR error

  164 expr_stmnt_list: expr_stmnt_list ',' expr
  165                | expr
  166                | error

  167 expr_stmnt_list_cond: expr_stmnt_list_cond ',' expr
  168                     | expr
  169                     | error

  170 expr_stmnt: ';'
  171           | expr semi_comma

  172 jump_stmnt: BREAK semi_comma
  173           | CONTINUE semi_comma
  174           | RETURN semi_comma
  175           | RETURN expr semi_comma

  176 exit_stmnt: EXIT '(' ')' semi_comma
  177           | EXIT error

  178 constant: NUMBER
  179         | DECIMAL
  180         | CHAR_LIT
  181         | STR_LIT
  182         | BOOLEAN

  183 param_list: data_type ID
  184           | param_list ',' data_type ID
  185           | error

  186 ext_dec: data_type ID_init_list ';'
  187        | data_type error
  188        | error

  189 dec: data_type ID_init_list ';'
  190    | data_type error

  191 ID_init_list: dec_init
  192             | ID_init_list ',' dec_init
  193             | ID_init_list error

  194 dec_init: ID
  195         | ID '[' NUMBER ']'
  196         | ID '=' expr
  197         | ID '[' error ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 91
'#' (35) 13 14 15 16
'%' (37) 72
'&' (38) 88
'(' (40) 41 42 44 47 51 52 54 56 103 104 105 106 107 108 137 141 142
    143 144 145 151 157 158 159 160 176
')' (41) 18 19 20 21 34 35 36 37 41 42 47 51 54 56 103 104 105 106
    107 108 138 141 142 143 144 145 151 157 158 159 160 176
'*' (42) 70
'+' (43) 68
',' (44) 57 164 167 184 192
'-' (45) 69
'.' (46) 14
'/' (47) 71
':' (58) 129
';' (59) 31 44 103 104 105 107 108 158 170 186 189
'=' (61) 73 196
'[' (91) 43 45 195 197
']' (93) 43 195 197
'^' (94) 90
'{' (123) 131 132 133 139 145
'|' (124) 89
'}' (125) 140 145
'~' (126) 92
error (256) 16 23 24 29 30 32 38 44 45 52 53 54 59 109 110 111 112
    113 114 125 127 130 133 136 146 147 150 160 161 162 163 166 169
    177 185 187 188 190 193 197
NUMBER (258) 116 178 195
DECIMAL (259) 118 179
BOOLEAN (260) 182
STR_LIT (261) 17 120 181
ID (262) 14 15 25 26 27 28 29 30 34 35 36 37 40 41 42 43 44 45 61 115
    117 119 121 122 123 183 184 194 195 196 197
CHAR_LIT (263) 180
INT (264) 8 18 19 23
FLOAT (265) 9
CHAR (266) 11
BOOL (267) 10
VOID (268) 20 21 24 27 28 30 36 37
STRING (269) 12
ADD_ASS (270) 74
SUB_ASS (271) 75
MUL_ASS (272) 76
DIV_ASS (273) 77
MOD_ASS (274) 78
AND_ASS (275) 79
XOR_ASS (276) 80
OR_ASS (277) 81
BREAK (278) 172
CONTINUE (279) 173
RETURN (280) 174 175
FOR (281) 159 163
WHILE (282) 157 158 160 161
IF (283) 141 142 143 144 146
ELSE (284) 142 143
DO (285) 158 162
ELIF (286) 150 151
LESS_OP (287) 14 15 82
GREAT_OP (288) 14 15 83
LESS_EQ_OP (289) 84
GREAT_EQ_OP (290) 85
EQEQ_OP (291) 86
NOTEQ_OP (292) 87
AND_OP (293) 66
OR_OP (294) 67
MAIN (295) 18 19 20 21 23 24
IN (296)
OUT (297)
INCLUDE (298) 13 14 15
EXIT (299) 176 177
GETFLOAT (300) 107 113
GETINT (301) 108 112
GETSTRING (302) 106 114
PRINTSTR (303) 103 111
PRINTFLOAT (304) 105 109
PRINTINT (305) 104 110
CASE (306) 124 125
OTHERWISE (307) 126 127
SWITCH (308) 145 147
ERROR (309) 55 56
INCR (310)
DECR (311)
TYPEDEF (312)
RES_STR (313)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
Start_sym (82)
    on left: 1, on right: 0
Start1 (83)
    on left: 2 3 4 5, on right: 1 2 3 4
Start2 (84)
    on left: 6 7, on right: 5 6
data_type (85)
    on left: 8 9 10 11 12, on right: 25 26 29 34 35 38 183 184 186
    187 189 190
include_dec (86)
    on left: 13 14 15 16, on right: 6
string (87)
    on left: 17, on right: 13
main_func (88)
    on left: 18 19 20 21 22 23 24, on right: 1
func_dec (89)
    on left: 25 26 27 28 29 30, on right: 3
semi_comma (90)
    on left: 31 32, on right: 25 26 27 28 159 171 172 173 174 175 176
param (91)
    on left: 33, on right: 18 20 25 27 34 36
func_def (92)
    on left: 34 35 36 37 38, on right: 2
micro_val (93)
    on left: 39 40 41 42 43 44 45, on right: 46 49 50 53 55
expr (94)
    on left: 46 47 48 49 50 51 52 53 54 55 56, on right: 43 47 48 49
    50 51 52 54 55 56 141 142 143 144 145 151 157 158 160 164 165 167
    168 171 175 196
arg_list (95)
    on left: 57 58 59, on right: 42 57 59
arg (96)
    on left: 60 61, on right: 57 58
operators (97)
    on left: 62 63 64 65, on right: 49 51 53 54
logical_op (98)
    on left: 66 67, on right: 64
binary_op (99)
    on left: 68 69 70 71 72, on right: 62
assignment_op (100)
    on left: 73 74 75 76 77 78 79 80 81, on right: 50
relational_op (101)
    on left: 82 83 84 85 86 87, on right: 63
bit_logical_op (102)
    on left: 88 89 90, on right: 65
unary_op (103)
    on left: 91 92, on right: 48
stmnt_list (104)
    on left: 93 94, on right: 94 126 132 133 135 136
stmnt (105)
    on left: 95 96 97 98 99 100 101 102, on right: 93 94 153
io_stmnt (106)
    on left: 103 104 105 106 107 108 109 110 111 112 113 114, on right:
    101
arg_print_int (107)
    on left: 115 116, on right: 104
arg_print_float (108)
    on left: 117 118, on right: 105
arg_printstr (109)
    on left: 119 120, on right: 103
arg_get_str (110)
    on left: 121, on right: 106
arg_get_int (111)
    on left: 122, on right: 108
arg_get_float (112)
    on left: 123, on right: 107
labeled_stmnt (113)
    on left: 124 125, on right: 152
otwise_stmnt (114)
    on left: 126 127 128, on right: 154
colon (115)
    on left: 129 130, on right: 124 126
func_compound_stmnt (116)
    on left: 131 132 133, on right: 18 19 20 21 34 35 36 37 38
compound_stmnt (117)
    on left: 134 135 136, on right: 95 141 142 143 144 151 157 158
    159
_LOB (118)
    on left: 137, on right: 18 19 20 21 25 26 27 28 29 30 34 35 36
    37
_ROB (119)
    on left: 138, on right: 25 26 27 28
_LCB (120)
    on left: 139, on right: 134 135 136
_RCB (121)
    on left: 140, on right: 131 132 134 135
condition_stmnt (122)
    on left: 141 142 143 144 145 146 147, on right: 97
elif_list (123)
    on left: 148 149 150, on right: 143 144 148
elseifpart (124)
    on left: 151, on right: 148 149
switch_stmnt (125)
    on left: 152 153, on right: 155 156
switch_stmnt_list (126)
    on left: 154, on right: 145
switch_stmnt_list1 (127)
    on left: 155 156, on right: 154 155
loop_stmnt (128)
    on left: 157 158 159 160 161 162 163, on right: 98
expr_stmnt_list (129)
    on left: 164 165 166, on right: 159 164
expr_stmnt_list_cond (130)
    on left: 167 168 169, on right: 159 167
expr_stmnt (131)
    on left: 170 171, on right: 96
jump_stmnt (132)
    on left: 172 173 174 175, on right: 99
exit_stmnt (133)
    on left: 176 177, on right: 102
constant (134)
    on left: 178 179 180 181 182, on right: 39 60 124
param_list (135)
    on left: 183 184 185, on right: 33 184
ext_dec (136)
    on left: 186 187 188, on right: 4
dec (137)
    on left: 189 190, on right: 100
ID_init_list (138)
    on left: 191 192 193, on right: 186 189 192 193
dec_init (139)
    on left: 194 195 196 197, on right: 191 192


State 0

    0 $accept: . Start_sym $end

    $default  reduce using rule 7 (Start2)

    Start_sym  go to state 1
    Start1     go to state 2
    Start2     go to state 3


State 1

    0 $accept: Start_sym . $end

    $end  shift, and go to state 4


State 2

    1 Start_sym: Start1 . main_func
    2 Start1: Start1 . func_def
    3       | Start1 . func_dec
    4       | Start1 . ext_dec

    error   shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    VOID    shift, and go to state 10
    STRING  shift, and go to state 11

    $end  reduce using rule 22 (main_func)

    data_type  go to state 12
    main_func  go to state 13
    func_dec   go to state 14
    func_def   go to state 15
    ext_dec    go to state 16


State 3

    5 Start1: Start2 .
    6 Start2: Start2 . include_dec

    '#'  shift, and go to state 17

    $default  reduce using rule 5 (Start1)

    include_dec  go to state 18


State 4

    0 $accept: Start_sym $end .

    $default  accept


State 5

  188 ext_dec: error .

    $default  reduce using rule 188 (ext_dec)


State 6

    8 data_type: INT .
   18 main_func: INT . MAIN _LOB param ')' func_compound_stmnt
   19          | INT . MAIN _LOB ')' func_compound_stmnt
   23          | INT . MAIN error

    MAIN  shift, and go to state 19

    $default  reduce using rule 8 (data_type)


State 7

    9 data_type: FLOAT .

    $default  reduce using rule 9 (data_type)


State 8

   11 data_type: CHAR .

    $default  reduce using rule 11 (data_type)


State 9

   10 data_type: BOOL .

    $default  reduce using rule 10 (data_type)


State 10

   20 main_func: VOID . MAIN _LOB param ')' func_compound_stmnt
   21          | VOID . MAIN _LOB ')' func_compound_stmnt
   24          | VOID . MAIN error
   27 func_dec: VOID . ID _LOB param _ROB semi_comma
   28         | VOID . ID _LOB _ROB semi_comma
   30         | VOID . ID _LOB error
   36 func_def: VOID . ID _LOB param ')' func_compound_stmnt
   37         | VOID . ID _LOB ')' func_compound_stmnt

    ID    shift, and go to state 20
    MAIN  shift, and go to state 21


State 11

   12 data_type: STRING .

    $default  reduce using rule 12 (data_type)


State 12

   25 func_dec: data_type . ID _LOB param _ROB semi_comma
   26         | data_type . ID _LOB _ROB semi_comma
   29         | data_type . ID _LOB error
   34 func_def: data_type . ID _LOB param ')' func_compound_stmnt
   35         | data_type . ID _LOB ')' func_compound_stmnt
   38         | data_type . error func_compound_stmnt
  186 ext_dec: data_type . ID_init_list ';'
  187        | data_type . error

    error  shift, and go to state 22
    ID     shift, and go to state 23

    ID_init_list  go to state 24
    dec_init      go to state 25


State 13

    1 Start_sym: Start1 main_func .

    $default  reduce using rule 1 (Start_sym)


State 14

    3 Start1: Start1 func_dec .

    $default  reduce using rule 3 (Start1)


State 15

    2 Start1: Start1 func_def .

    $default  reduce using rule 2 (Start1)


State 16

    4 Start1: Start1 ext_dec .

    $default  reduce using rule 4 (Start1)


State 17

   13 include_dec: '#' . INCLUDE string
   14            | '#' . INCLUDE LESS_OP ID '.' ID GREAT_OP
   15            | '#' . INCLUDE LESS_OP ID GREAT_OP
   16            | '#' . error

    error    shift, and go to state 26
    INCLUDE  shift, and go to state 27


State 18

    6 Start2: Start2 include_dec .

    $default  reduce using rule 6 (Start2)


State 19

   18 main_func: INT MAIN . _LOB param ')' func_compound_stmnt
   19          | INT MAIN . _LOB ')' func_compound_stmnt
   23          | INT MAIN . error

    error  shift, and go to state 28
    '('    shift, and go to state 29

    _LOB  go to state 30


State 20

   27 func_dec: VOID ID . _LOB param _ROB semi_comma
   28         | VOID ID . _LOB _ROB semi_comma
   30         | VOID ID . _LOB error
   36 func_def: VOID ID . _LOB param ')' func_compound_stmnt
   37         | VOID ID . _LOB ')' func_compound_stmnt

    '('  shift, and go to state 29

    _LOB  go to state 31


State 21

   20 main_func: VOID MAIN . _LOB param ')' func_compound_stmnt
   21          | VOID MAIN . _LOB ')' func_compound_stmnt
   24          | VOID MAIN . error

    error  shift, and go to state 32
    '('    shift, and go to state 29

    _LOB  go to state 33


State 22

   38 func_def: data_type error . func_compound_stmnt
  187 ext_dec: data_type error .

    '{'  shift, and go to state 34

    $default  reduce using rule 187 (ext_dec)

    func_compound_stmnt  go to state 35


State 23

   25 func_dec: data_type ID . _LOB param _ROB semi_comma
   26         | data_type ID . _LOB _ROB semi_comma
   29         | data_type ID . _LOB error
   34 func_def: data_type ID . _LOB param ')' func_compound_stmnt
   35         | data_type ID . _LOB ')' func_compound_stmnt
  194 dec_init: ID .
  195         | ID . '[' NUMBER ']'
  196         | ID . '=' expr
  197         | ID . '[' error ']'

    '='  shift, and go to state 36
    '('  shift, and go to state 29
    '['  shift, and go to state 37

    $default  reduce using rule 194 (dec_init)

    _LOB  go to state 38


State 24

  186 ext_dec: data_type ID_init_list . ';'
  192 ID_init_list: ID_init_list . ',' dec_init
  193             | ID_init_list . error

    error  shift, and go to state 39
    ';'    shift, and go to state 40
    ','    shift, and go to state 41


State 25

  191 ID_init_list: dec_init .

    $default  reduce using rule 191 (ID_init_list)


State 26

   16 include_dec: '#' error .

    $default  reduce using rule 16 (include_dec)


State 27

   13 include_dec: '#' INCLUDE . string
   14            | '#' INCLUDE . LESS_OP ID '.' ID GREAT_OP
   15            | '#' INCLUDE . LESS_OP ID GREAT_OP

    STR_LIT  shift, and go to state 42
    LESS_OP  shift, and go to state 43

    string  go to state 44


State 28

   23 main_func: INT MAIN error .

    $default  reduce using rule 23 (main_func)


State 29

  137 _LOB: '(' .

    $default  reduce using rule 137 (_LOB)


State 30

   18 main_func: INT MAIN _LOB . param ')' func_compound_stmnt
   19          | INT MAIN _LOB . ')' func_compound_stmnt

    error   shift, and go to state 45
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 11
    ')'     shift, and go to state 47

    data_type   go to state 48
    param       go to state 49
    param_list  go to state 50


State 31

   27 func_dec: VOID ID _LOB . param _ROB semi_comma
   28         | VOID ID _LOB . _ROB semi_comma
   30         | VOID ID _LOB . error
   36 func_def: VOID ID _LOB . param ')' func_compound_stmnt
   37         | VOID ID _LOB . ')' func_compound_stmnt

    error   shift, and go to state 51
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 11
    ')'     shift, and go to state 52

    data_type   go to state 48
    param       go to state 53
    _ROB        go to state 54
    param_list  go to state 50


State 32

   24 main_func: VOID MAIN error .

    $default  reduce using rule 24 (main_func)


State 33

   20 main_func: VOID MAIN _LOB . param ')' func_compound_stmnt
   21          | VOID MAIN _LOB . ')' func_compound_stmnt

    error   shift, and go to state 45
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 11
    ')'     shift, and go to state 55

    data_type   go to state 48
    param       go to state 56
    param_list  go to state 50


State 34

  131 func_compound_stmnt: '{' . _RCB
  132                    | '{' . stmnt_list _RCB
  133                    | '{' . stmnt_list error

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82
    '}'         shift, and go to state 83

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt_list       go to state 88
    stmnt            go to state 89
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    _RCB             go to state 93
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 35

   38 func_def: data_type error func_compound_stmnt .

    $default  reduce using rule 38 (func_def)


State 36

  196 dec_init: ID '=' . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 101
    unary_op   go to state 87
    constant   go to state 99


State 37

  195 dec_init: ID '[' . NUMBER ']'
  197         | ID '[' . error ']'

    error   shift, and go to state 102
    NUMBER  shift, and go to state 103


State 38

   25 func_dec: data_type ID _LOB . param _ROB semi_comma
   26         | data_type ID _LOB . _ROB semi_comma
   29         | data_type ID _LOB . error
   34 func_def: data_type ID _LOB . param ')' func_compound_stmnt
   35         | data_type ID _LOB . ')' func_compound_stmnt

    error   shift, and go to state 104
    INT     shift, and go to state 46
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 11
    ')'     shift, and go to state 105

    data_type   go to state 48
    param       go to state 106
    _ROB        go to state 107
    param_list  go to state 50


State 39

  193 ID_init_list: ID_init_list error .

    $default  reduce using rule 193 (ID_init_list)


State 40

  186 ext_dec: data_type ID_init_list ';' .

    $default  reduce using rule 186 (ext_dec)


State 41

  192 ID_init_list: ID_init_list ',' . dec_init

    ID  shift, and go to state 108

    dec_init  go to state 109


State 42

   17 string: STR_LIT .

    $default  reduce using rule 17 (string)


State 43

   14 include_dec: '#' INCLUDE LESS_OP . ID '.' ID GREAT_OP
   15            | '#' INCLUDE LESS_OP . ID GREAT_OP

    ID  shift, and go to state 110


State 44

   13 include_dec: '#' INCLUDE string .

    $default  reduce using rule 13 (include_dec)


State 45

  185 param_list: error .

    $default  reduce using rule 185 (param_list)


State 46

    8 data_type: INT .

    $default  reduce using rule 8 (data_type)


State 47

   19 main_func: INT MAIN _LOB ')' . func_compound_stmnt

    '{'  shift, and go to state 34

    func_compound_stmnt  go to state 111


State 48

  183 param_list: data_type . ID

    ID  shift, and go to state 112


State 49

   18 main_func: INT MAIN _LOB param . ')' func_compound_stmnt

    ')'  shift, and go to state 113


State 50

   33 param: param_list .
  184 param_list: param_list . ',' data_type ID

    ','  shift, and go to state 114

    $default  reduce using rule 33 (param)


State 51

   30 func_dec: VOID ID _LOB error .
  185 param_list: error .

    ')'       reduce using rule 185 (param_list)
    ','       reduce using rule 185 (param_list)
    $default  reduce using rule 30 (func_dec)


State 52

   37 func_def: VOID ID _LOB ')' . func_compound_stmnt
  138 _ROB: ')' .

    '{'  shift, and go to state 34

    $default  reduce using rule 138 (_ROB)

    func_compound_stmnt  go to state 115


State 53

   27 func_dec: VOID ID _LOB param . _ROB semi_comma
   36 func_def: VOID ID _LOB param . ')' func_compound_stmnt

    ')'  shift, and go to state 116

    _ROB  go to state 117


State 54

   28 func_dec: VOID ID _LOB _ROB . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 120


State 55

   21 main_func: VOID MAIN _LOB ')' . func_compound_stmnt

    '{'  shift, and go to state 34

    func_compound_stmnt  go to state 121


State 56

   20 main_func: VOID MAIN _LOB param . ')' func_compound_stmnt

    ')'  shift, and go to state 122


State 57

  178 constant: NUMBER .

    $default  reduce using rule 178 (constant)


State 58

  179 constant: DECIMAL .

    $default  reduce using rule 179 (constant)


State 59

  182 constant: BOOLEAN .

    $default  reduce using rule 182 (constant)


State 60

  181 constant: STR_LIT .

    $default  reduce using rule 181 (constant)


State 61

   40 micro_val: ID .
   41          | ID . '(' ')'
   42          | ID . '(' arg_list ')'
   43          | ID . '[' expr ']'
   44          | ID . '(' error ';'
   45          | ID . '[' error

    '('  shift, and go to state 123
    '['  shift, and go to state 124

    $default  reduce using rule 40 (micro_val)


State 62

  180 constant: CHAR_LIT .

    $default  reduce using rule 180 (constant)


State 63

  172 jump_stmnt: BREAK . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 125


State 64

  173 jump_stmnt: CONTINUE . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 126


State 65

  174 jump_stmnt: RETURN . semi_comma
  175           | RETURN . expr semi_comma

    error     shift, and go to state 118
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    ';'       shift, and go to state 119
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    semi_comma  go to state 127
    micro_val   go to state 85
    expr        go to state 128
    unary_op    go to state 87
    constant    go to state 99


State 66

  159 loop_stmnt: FOR . '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt
  163           | FOR . error

    error  shift, and go to state 129
    '('    shift, and go to state 130


State 67

  157 loop_stmnt: WHILE . '(' expr ')' compound_stmnt
  160           | WHILE . '(' expr ')' error
  161           | WHILE . error

    error  shift, and go to state 131
    '('    shift, and go to state 132


State 68

  141 condition_stmnt: IF . '(' expr ')' compound_stmnt
  142                | IF . '(' expr ')' compound_stmnt ELSE compound_stmnt
  143                | IF . '(' expr ')' compound_stmnt elif_list ELSE compound_stmnt
  144                | IF . '(' expr ')' compound_stmnt elif_list
  146                | IF . error

    error  shift, and go to state 133
    '('    shift, and go to state 134


State 69

  158 loop_stmnt: DO . compound_stmnt WHILE '(' expr ')' ';'
  162           | DO . error

    error  shift, and go to state 135
    '{'    shift, and go to state 82

    compound_stmnt  go to state 136
    _LCB            go to state 92


State 70

  176 exit_stmnt: EXIT . '(' ')' semi_comma
  177           | EXIT . error

    error  shift, and go to state 137
    '('    shift, and go to state 138


State 71

  107 io_stmnt: GETFLOAT . '(' arg_get_float ')' ';'
  113         | GETFLOAT . error

    error  shift, and go to state 139
    '('    shift, and go to state 140


State 72

  108 io_stmnt: GETINT . '(' arg_get_int ')' ';'
  112         | GETINT . error

    error  shift, and go to state 141
    '('    shift, and go to state 142


State 73

  106 io_stmnt: GETSTRING . '(' arg_get_str ')'
  114         | GETSTRING . error

    error  shift, and go to state 143
    '('    shift, and go to state 144


State 74

  103 io_stmnt: PRINTSTR . '(' arg_printstr ')' ';'
  111         | PRINTSTR . error

    error  shift, and go to state 145
    '('    shift, and go to state 146


State 75

  105 io_stmnt: PRINTFLOAT . '(' arg_print_float ')' ';'
  109         | PRINTFLOAT . error

    error  shift, and go to state 147
    '('    shift, and go to state 148


State 76

  104 io_stmnt: PRINTINT . '(' arg_print_int ')' ';'
  110         | PRINTINT . error

    error  shift, and go to state 149
    '('    shift, and go to state 150


State 77

  145 condition_stmnt: SWITCH . '(' expr ')' '{' switch_stmnt_list '}'
  147                | SWITCH . error

    error  shift, and go to state 151
    '('    shift, and go to state 152


State 78

  170 expr_stmnt: ';' .

    $default  reduce using rule 170 (expr_stmnt)


State 79

   47 expr: '(' . expr ')'
   51     | '(' . expr ')' operators expr
   52     | '(' . expr error
   54     | '(' . expr ')' operators error
   56     | '(' . expr ')' ERROR expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 153
    unary_op   go to state 87
    constant   go to state 99


State 80

   91 unary_op: '!' .

    $default  reduce using rule 91 (unary_op)


State 81

   92 unary_op: '~' .

    $default  reduce using rule 92 (unary_op)


State 82

  139 _LCB: '{' .

    $default  reduce using rule 139 (_LCB)


State 83

  140 _RCB: '}' .

    $default  reduce using rule 140 (_RCB)


State 84

  189 dec: data_type . ID_init_list ';'
  190    | data_type . error

    error  shift, and go to state 154
    ID     shift, and go to state 108

    ID_init_list  go to state 155
    dec_init      go to state 25


State 85

   46 expr: micro_val .
   49     | micro_val . operators expr
   50     | micro_val . assignment_op expr
   53     | micro_val . operators error
   55     | micro_val . ERROR expr

    ADD_ASS      shift, and go to state 156
    SUB_ASS      shift, and go to state 157
    MUL_ASS      shift, and go to state 158
    DIV_ASS      shift, and go to state 159
    MOD_ASS      shift, and go to state 160
    AND_ASS      shift, and go to state 161
    XOR_ASS      shift, and go to state 162
    OR_ASS       shift, and go to state 163
    LESS_OP      shift, and go to state 164
    GREAT_OP     shift, and go to state 165
    LESS_EQ_OP   shift, and go to state 166
    GREAT_EQ_OP  shift, and go to state 167
    EQEQ_OP      shift, and go to state 168
    NOTEQ_OP     shift, and go to state 169
    AND_OP       shift, and go to state 170
    OR_OP        shift, and go to state 171
    ERROR        shift, and go to state 172
    '='          shift, and go to state 173
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '^'          shift, and go to state 181

    $default  reduce using rule 46 (expr)

    operators       go to state 182
    logical_op      go to state 183
    binary_op       go to state 184
    assignment_op   go to state 185
    relational_op   go to state 186
    bit_logical_op  go to state 187


State 86

  171 expr_stmnt: expr . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 188


State 87

   48 expr: unary_op . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 189
    unary_op   go to state 87
    constant   go to state 99


State 88

   94 stmnt_list: stmnt_list . stmnt
  132 func_compound_stmnt: '{' stmnt_list . _RCB
  133                    | '{' stmnt_list . error

    error       shift, and go to state 190
    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82
    '}'         shift, and go to state 83

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt            go to state 191
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    _RCB             go to state 192
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 89

   93 stmnt_list: stmnt .

    $default  reduce using rule 93 (stmnt_list)


State 90

  101 stmnt: io_stmnt .

    $default  reduce using rule 101 (stmnt)


State 91

   95 stmnt: compound_stmnt .

    $default  reduce using rule 95 (stmnt)


State 92

  134 compound_stmnt: _LCB . _RCB
  135               | _LCB . stmnt_list _RCB
  136               | _LCB . stmnt_list error

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82
    '}'         shift, and go to state 83

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt_list       go to state 193
    stmnt            go to state 89
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    _RCB             go to state 194
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 93

  131 func_compound_stmnt: '{' _RCB .

    $default  reduce using rule 131 (func_compound_stmnt)


State 94

   97 stmnt: condition_stmnt .

    $default  reduce using rule 97 (stmnt)


State 95

   98 stmnt: loop_stmnt .

    $default  reduce using rule 98 (stmnt)


State 96

   96 stmnt: expr_stmnt .

    $default  reduce using rule 96 (stmnt)


State 97

   99 stmnt: jump_stmnt .

    $default  reduce using rule 99 (stmnt)


State 98

  102 stmnt: exit_stmnt .

    $default  reduce using rule 102 (stmnt)


State 99

   39 micro_val: constant .

    $default  reduce using rule 39 (micro_val)


State 100

  100 stmnt: dec .

    $default  reduce using rule 100 (stmnt)


State 101

  196 dec_init: ID '=' expr .

    $default  reduce using rule 196 (dec_init)


State 102

  197 dec_init: ID '[' error . ']'

    ']'  shift, and go to state 195


State 103

  195 dec_init: ID '[' NUMBER . ']'

    ']'  shift, and go to state 196


State 104

   29 func_dec: data_type ID _LOB error .
  185 param_list: error .

    ')'       reduce using rule 185 (param_list)
    ','       reduce using rule 185 (param_list)
    $default  reduce using rule 29 (func_dec)


State 105

   35 func_def: data_type ID _LOB ')' . func_compound_stmnt
  138 _ROB: ')' .

    '{'  shift, and go to state 34

    $default  reduce using rule 138 (_ROB)

    func_compound_stmnt  go to state 197


State 106

   25 func_dec: data_type ID _LOB param . _ROB semi_comma
   34 func_def: data_type ID _LOB param . ')' func_compound_stmnt

    ')'  shift, and go to state 198

    _ROB  go to state 199


State 107

   26 func_dec: data_type ID _LOB _ROB . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 200


State 108

  194 dec_init: ID .
  195         | ID . '[' NUMBER ']'
  196         | ID . '=' expr
  197         | ID . '[' error ']'

    '='  shift, and go to state 36
    '['  shift, and go to state 37

    $default  reduce using rule 194 (dec_init)


State 109

  192 ID_init_list: ID_init_list ',' dec_init .

    $default  reduce using rule 192 (ID_init_list)


State 110

   14 include_dec: '#' INCLUDE LESS_OP ID . '.' ID GREAT_OP
   15            | '#' INCLUDE LESS_OP ID . GREAT_OP

    GREAT_OP  shift, and go to state 201
    '.'       shift, and go to state 202


State 111

   19 main_func: INT MAIN _LOB ')' func_compound_stmnt .

    $default  reduce using rule 19 (main_func)


State 112

  183 param_list: data_type ID .

    $default  reduce using rule 183 (param_list)


State 113

   18 main_func: INT MAIN _LOB param ')' . func_compound_stmnt

    '{'  shift, and go to state 34

    func_compound_stmnt  go to state 203


State 114

  184 param_list: param_list ',' . data_type ID

    INT     shift, and go to state 46
    FLOAT   shift, and go to state 7
    CHAR    shift, and go to state 8
    BOOL    shift, and go to state 9
    STRING  shift, and go to state 11

    data_type  go to state 204


State 115

   37 func_def: VOID ID _LOB ')' func_compound_stmnt .

    $default  reduce using rule 37 (func_def)


State 116

   36 func_def: VOID ID _LOB param ')' . func_compound_stmnt
  138 _ROB: ')' .

    '{'  shift, and go to state 34

    $default  reduce using rule 138 (_ROB)

    func_compound_stmnt  go to state 205


State 117

   27 func_dec: VOID ID _LOB param _ROB . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 206


State 118

   32 semi_comma: error .

    $default  reduce using rule 32 (semi_comma)


State 119

   31 semi_comma: ';' .

    $default  reduce using rule 31 (semi_comma)


State 120

   28 func_dec: VOID ID _LOB _ROB semi_comma .

    $default  reduce using rule 28 (func_dec)


State 121

   21 main_func: VOID MAIN _LOB ')' func_compound_stmnt .

    $default  reduce using rule 21 (main_func)


State 122

   20 main_func: VOID MAIN _LOB param ')' . func_compound_stmnt

    '{'  shift, and go to state 34

    func_compound_stmnt  go to state 207


State 123

   41 micro_val: ID '(' . ')'
   42          | ID '(' . arg_list ')'
   44          | ID '(' . error ';'

    error     shift, and go to state 208
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 209
    CHAR_LIT  shift, and go to state 62
    ')'       shift, and go to state 210

    arg_list  go to state 211
    arg       go to state 212
    constant  go to state 213


State 124

   43 micro_val: ID '[' . expr ']'
   45          | ID '[' . error

    error     shift, and go to state 214
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 215
    unary_op   go to state 87
    constant   go to state 99


State 125

  172 jump_stmnt: BREAK semi_comma .

    $default  reduce using rule 172 (jump_stmnt)


State 126

  173 jump_stmnt: CONTINUE semi_comma .

    $default  reduce using rule 173 (jump_stmnt)


State 127

  174 jump_stmnt: RETURN semi_comma .

    $default  reduce using rule 174 (jump_stmnt)


State 128

  175 jump_stmnt: RETURN expr . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 216


State 129

  163 loop_stmnt: FOR error .

    $default  reduce using rule 163 (loop_stmnt)


State 130

  159 loop_stmnt: FOR '(' . expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt

    error     shift, and go to state 217
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val        go to state 85
    expr             go to state 218
    unary_op         go to state 87
    expr_stmnt_list  go to state 219
    constant         go to state 99


State 131

  161 loop_stmnt: WHILE error .

    $default  reduce using rule 161 (loop_stmnt)


State 132

  157 loop_stmnt: WHILE '(' . expr ')' compound_stmnt
  160           | WHILE '(' . expr ')' error

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 220
    unary_op   go to state 87
    constant   go to state 99


State 133

  146 condition_stmnt: IF error .

    $default  reduce using rule 146 (condition_stmnt)


State 134

  141 condition_stmnt: IF '(' . expr ')' compound_stmnt
  142                | IF '(' . expr ')' compound_stmnt ELSE compound_stmnt
  143                | IF '(' . expr ')' compound_stmnt elif_list ELSE compound_stmnt
  144                | IF '(' . expr ')' compound_stmnt elif_list

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 221
    unary_op   go to state 87
    constant   go to state 99


State 135

  162 loop_stmnt: DO error .

    $default  reduce using rule 162 (loop_stmnt)


State 136

  158 loop_stmnt: DO compound_stmnt . WHILE '(' expr ')' ';'

    WHILE  shift, and go to state 222


State 137

  177 exit_stmnt: EXIT error .

    $default  reduce using rule 177 (exit_stmnt)


State 138

  176 exit_stmnt: EXIT '(' . ')' semi_comma

    ')'  shift, and go to state 223


State 139

  113 io_stmnt: GETFLOAT error .

    $default  reduce using rule 113 (io_stmnt)


State 140

  107 io_stmnt: GETFLOAT '(' . arg_get_float ')' ';'

    ID  shift, and go to state 224

    arg_get_float  go to state 225


State 141

  112 io_stmnt: GETINT error .

    $default  reduce using rule 112 (io_stmnt)


State 142

  108 io_stmnt: GETINT '(' . arg_get_int ')' ';'

    ID  shift, and go to state 226

    arg_get_int  go to state 227


State 143

  114 io_stmnt: GETSTRING error .

    $default  reduce using rule 114 (io_stmnt)


State 144

  106 io_stmnt: GETSTRING '(' . arg_get_str ')'

    ID  shift, and go to state 228

    arg_get_str  go to state 229


State 145

  111 io_stmnt: PRINTSTR error .

    $default  reduce using rule 111 (io_stmnt)


State 146

  103 io_stmnt: PRINTSTR '(' . arg_printstr ')' ';'

    STR_LIT  shift, and go to state 230
    ID       shift, and go to state 231

    arg_printstr  go to state 232


State 147

  109 io_stmnt: PRINTFLOAT error .

    $default  reduce using rule 109 (io_stmnt)


State 148

  105 io_stmnt: PRINTFLOAT '(' . arg_print_float ')' ';'

    DECIMAL  shift, and go to state 233
    ID       shift, and go to state 234

    arg_print_float  go to state 235


State 149

  110 io_stmnt: PRINTINT error .

    $default  reduce using rule 110 (io_stmnt)


State 150

  104 io_stmnt: PRINTINT '(' . arg_print_int ')' ';'

    NUMBER  shift, and go to state 236
    ID      shift, and go to state 237

    arg_print_int  go to state 238


State 151

  147 condition_stmnt: SWITCH error .

    $default  reduce using rule 147 (condition_stmnt)


State 152

  145 condition_stmnt: SWITCH '(' . expr ')' '{' switch_stmnt_list '}'

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 239
    unary_op   go to state 87
    constant   go to state 99


State 153

   47 expr: '(' expr . ')'
   51     | '(' expr . ')' operators expr
   52     | '(' expr . error
   54     | '(' expr . ')' operators error
   56     | '(' expr . ')' ERROR expr

    error  shift, and go to state 240
    ')'    shift, and go to state 241


State 154

  190 dec: data_type error .

    $default  reduce using rule 190 (dec)


State 155

  189 dec: data_type ID_init_list . ';'
  192 ID_init_list: ID_init_list . ',' dec_init
  193             | ID_init_list . error

    error  shift, and go to state 39
    ';'    shift, and go to state 242
    ','    shift, and go to state 41


State 156

   74 assignment_op: ADD_ASS .

    $default  reduce using rule 74 (assignment_op)


State 157

   75 assignment_op: SUB_ASS .

    $default  reduce using rule 75 (assignment_op)


State 158

   76 assignment_op: MUL_ASS .

    $default  reduce using rule 76 (assignment_op)


State 159

   77 assignment_op: DIV_ASS .

    $default  reduce using rule 77 (assignment_op)


State 160

   78 assignment_op: MOD_ASS .

    $default  reduce using rule 78 (assignment_op)


State 161

   79 assignment_op: AND_ASS .

    $default  reduce using rule 79 (assignment_op)


State 162

   80 assignment_op: XOR_ASS .

    $default  reduce using rule 80 (assignment_op)


State 163

   81 assignment_op: OR_ASS .

    $default  reduce using rule 81 (assignment_op)


State 164

   82 relational_op: LESS_OP .

    $default  reduce using rule 82 (relational_op)


State 165

   83 relational_op: GREAT_OP .

    $default  reduce using rule 83 (relational_op)


State 166

   84 relational_op: LESS_EQ_OP .

    $default  reduce using rule 84 (relational_op)


State 167

   85 relational_op: GREAT_EQ_OP .

    $default  reduce using rule 85 (relational_op)


State 168

   86 relational_op: EQEQ_OP .

    $default  reduce using rule 86 (relational_op)


State 169

   87 relational_op: NOTEQ_OP .

    $default  reduce using rule 87 (relational_op)


State 170

   66 logical_op: AND_OP .

    $default  reduce using rule 66 (logical_op)


State 171

   67 logical_op: OR_OP .

    $default  reduce using rule 67 (logical_op)


State 172

   55 expr: micro_val ERROR . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 243
    unary_op   go to state 87
    constant   go to state 99


State 173

   73 assignment_op: '=' .

    $default  reduce using rule 73 (assignment_op)


State 174

   68 binary_op: '+' .

    $default  reduce using rule 68 (binary_op)


State 175

   69 binary_op: '-' .

    $default  reduce using rule 69 (binary_op)


State 176

   70 binary_op: '*' .

    $default  reduce using rule 70 (binary_op)


State 177

   71 binary_op: '/' .

    $default  reduce using rule 71 (binary_op)


State 178

   72 binary_op: '%' .

    $default  reduce using rule 72 (binary_op)


State 179

   88 bit_logical_op: '&' .

    $default  reduce using rule 88 (bit_logical_op)


State 180

   89 bit_logical_op: '|' .

    $default  reduce using rule 89 (bit_logical_op)


State 181

   90 bit_logical_op: '^' .

    $default  reduce using rule 90 (bit_logical_op)


State 182

   49 expr: micro_val operators . expr
   53     | micro_val operators . error

    error     shift, and go to state 244
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 245
    unary_op   go to state 87
    constant   go to state 99


State 183

   64 operators: logical_op .

    $default  reduce using rule 64 (operators)


State 184

   62 operators: binary_op .

    $default  reduce using rule 62 (operators)


State 185

   50 expr: micro_val assignment_op . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 246
    unary_op   go to state 87
    constant   go to state 99


State 186

   63 operators: relational_op .

    $default  reduce using rule 63 (operators)


State 187

   65 operators: bit_logical_op .

    $default  reduce using rule 65 (operators)


State 188

  171 expr_stmnt: expr semi_comma .

    $default  reduce using rule 171 (expr_stmnt)


State 189

   48 expr: unary_op expr .

    $default  reduce using rule 48 (expr)


State 190

  133 func_compound_stmnt: '{' stmnt_list error .

    $default  reduce using rule 133 (func_compound_stmnt)


State 191

   94 stmnt_list: stmnt_list stmnt .

    $default  reduce using rule 94 (stmnt_list)


State 192

  132 func_compound_stmnt: '{' stmnt_list _RCB .

    $default  reduce using rule 132 (func_compound_stmnt)


State 193

   94 stmnt_list: stmnt_list . stmnt
  135 compound_stmnt: _LCB stmnt_list . _RCB
  136               | _LCB stmnt_list . error

    error       shift, and go to state 247
    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82
    '}'         shift, and go to state 83

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt            go to state 191
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    _RCB             go to state 248
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 194

  134 compound_stmnt: _LCB _RCB .

    $default  reduce using rule 134 (compound_stmnt)


State 195

  197 dec_init: ID '[' error ']' .

    $default  reduce using rule 197 (dec_init)


State 196

  195 dec_init: ID '[' NUMBER ']' .

    $default  reduce using rule 195 (dec_init)


State 197

   35 func_def: data_type ID _LOB ')' func_compound_stmnt .

    $default  reduce using rule 35 (func_def)


State 198

   34 func_def: data_type ID _LOB param ')' . func_compound_stmnt
  138 _ROB: ')' .

    '{'  shift, and go to state 34

    $default  reduce using rule 138 (_ROB)

    func_compound_stmnt  go to state 249


State 199

   25 func_dec: data_type ID _LOB param _ROB . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 250


State 200

   26 func_dec: data_type ID _LOB _ROB semi_comma .

    $default  reduce using rule 26 (func_dec)


State 201

   15 include_dec: '#' INCLUDE LESS_OP ID GREAT_OP .

    $default  reduce using rule 15 (include_dec)


State 202

   14 include_dec: '#' INCLUDE LESS_OP ID '.' . ID GREAT_OP

    ID  shift, and go to state 251


State 203

   18 main_func: INT MAIN _LOB param ')' func_compound_stmnt .

    $default  reduce using rule 18 (main_func)


State 204

  184 param_list: param_list ',' data_type . ID

    ID  shift, and go to state 252


State 205

   36 func_def: VOID ID _LOB param ')' func_compound_stmnt .

    $default  reduce using rule 36 (func_def)


State 206

   27 func_dec: VOID ID _LOB param _ROB semi_comma .

    $default  reduce using rule 27 (func_dec)


State 207

   20 main_func: VOID MAIN _LOB param ')' func_compound_stmnt .

    $default  reduce using rule 20 (main_func)


State 208

   44 micro_val: ID '(' error . ';'

    ';'  shift, and go to state 253


State 209

   61 arg: ID .

    $default  reduce using rule 61 (arg)


State 210

   41 micro_val: ID '(' ')' .

    $default  reduce using rule 41 (micro_val)


State 211

   42 micro_val: ID '(' arg_list . ')'
   57 arg_list: arg_list . ',' arg
   59         | arg_list . error

    error  shift, and go to state 254
    ')'    shift, and go to state 255
    ','    shift, and go to state 256


State 212

   58 arg_list: arg .

    $default  reduce using rule 58 (arg_list)


State 213

   60 arg: constant .

    $default  reduce using rule 60 (arg)


State 214

   45 micro_val: ID '[' error .

    $default  reduce using rule 45 (micro_val)


State 215

   43 micro_val: ID '[' expr . ']'

    ']'  shift, and go to state 257


State 216

  175 jump_stmnt: RETURN expr semi_comma .

    $default  reduce using rule 175 (jump_stmnt)


State 217

  166 expr_stmnt_list: error .

    $default  reduce using rule 166 (expr_stmnt_list)


State 218

  165 expr_stmnt_list: expr .

    $default  reduce using rule 165 (expr_stmnt_list)


State 219

  159 loop_stmnt: FOR '(' expr_stmnt_list . semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt
  164 expr_stmnt_list: expr_stmnt_list . ',' expr

    error  shift, and go to state 118
    ';'    shift, and go to state 119
    ','    shift, and go to state 258

    semi_comma  go to state 259


State 220

  157 loop_stmnt: WHILE '(' expr . ')' compound_stmnt
  160           | WHILE '(' expr . ')' error

    ')'  shift, and go to state 260


State 221

  141 condition_stmnt: IF '(' expr . ')' compound_stmnt
  142                | IF '(' expr . ')' compound_stmnt ELSE compound_stmnt
  143                | IF '(' expr . ')' compound_stmnt elif_list ELSE compound_stmnt
  144                | IF '(' expr . ')' compound_stmnt elif_list

    ')'  shift, and go to state 261


State 222

  158 loop_stmnt: DO compound_stmnt WHILE . '(' expr ')' ';'

    '('  shift, and go to state 262


State 223

  176 exit_stmnt: EXIT '(' ')' . semi_comma

    error  shift, and go to state 118
    ';'    shift, and go to state 119

    semi_comma  go to state 263


State 224

  123 arg_get_float: ID .

    $default  reduce using rule 123 (arg_get_float)


State 225

  107 io_stmnt: GETFLOAT '(' arg_get_float . ')' ';'

    ')'  shift, and go to state 264


State 226

  122 arg_get_int: ID .

    $default  reduce using rule 122 (arg_get_int)


State 227

  108 io_stmnt: GETINT '(' arg_get_int . ')' ';'

    ')'  shift, and go to state 265


State 228

  121 arg_get_str: ID .

    $default  reduce using rule 121 (arg_get_str)


State 229

  106 io_stmnt: GETSTRING '(' arg_get_str . ')'

    ')'  shift, and go to state 266


State 230

  120 arg_printstr: STR_LIT .

    $default  reduce using rule 120 (arg_printstr)


State 231

  119 arg_printstr: ID .

    $default  reduce using rule 119 (arg_printstr)


State 232

  103 io_stmnt: PRINTSTR '(' arg_printstr . ')' ';'

    ')'  shift, and go to state 267


State 233

  118 arg_print_float: DECIMAL .

    $default  reduce using rule 118 (arg_print_float)


State 234

  117 arg_print_float: ID .

    $default  reduce using rule 117 (arg_print_float)


State 235

  105 io_stmnt: PRINTFLOAT '(' arg_print_float . ')' ';'

    ')'  shift, and go to state 268


State 236

  116 arg_print_int: NUMBER .

    $default  reduce using rule 116 (arg_print_int)


State 237

  115 arg_print_int: ID .

    $default  reduce using rule 115 (arg_print_int)


State 238

  104 io_stmnt: PRINTINT '(' arg_print_int . ')' ';'

    ')'  shift, and go to state 269


State 239

  145 condition_stmnt: SWITCH '(' expr . ')' '{' switch_stmnt_list '}'

    ')'  shift, and go to state 270


State 240

   52 expr: '(' expr error .

    $default  reduce using rule 52 (expr)


State 241

   47 expr: '(' expr ')' .
   51     | '(' expr ')' . operators expr
   54     | '(' expr ')' . operators error
   56     | '(' expr ')' . ERROR expr

    LESS_OP      shift, and go to state 164
    GREAT_OP     shift, and go to state 165
    LESS_EQ_OP   shift, and go to state 166
    GREAT_EQ_OP  shift, and go to state 167
    EQEQ_OP      shift, and go to state 168
    NOTEQ_OP     shift, and go to state 169
    AND_OP       shift, and go to state 170
    OR_OP        shift, and go to state 171
    ERROR        shift, and go to state 271
    '+'          shift, and go to state 174
    '-'          shift, and go to state 175
    '*'          shift, and go to state 176
    '/'          shift, and go to state 177
    '%'          shift, and go to state 178
    '&'          shift, and go to state 179
    '|'          shift, and go to state 180
    '^'          shift, and go to state 181

    $default  reduce using rule 47 (expr)

    operators       go to state 272
    logical_op      go to state 183
    binary_op       go to state 184
    relational_op   go to state 186
    bit_logical_op  go to state 187


State 242

  189 dec: data_type ID_init_list ';' .

    $default  reduce using rule 189 (dec)


State 243

   55 expr: micro_val ERROR expr .

    $default  reduce using rule 55 (expr)


State 244

   53 expr: micro_val operators error .

    $default  reduce using rule 53 (expr)


State 245

   49 expr: micro_val operators expr .

    $default  reduce using rule 49 (expr)


State 246

   50 expr: micro_val assignment_op expr .

    $default  reduce using rule 50 (expr)


State 247

  136 compound_stmnt: _LCB stmnt_list error .

    $default  reduce using rule 136 (compound_stmnt)


State 248

  135 compound_stmnt: _LCB stmnt_list _RCB .

    $default  reduce using rule 135 (compound_stmnt)


State 249

   34 func_def: data_type ID _LOB param ')' func_compound_stmnt .

    $default  reduce using rule 34 (func_def)


State 250

   25 func_dec: data_type ID _LOB param _ROB semi_comma .

    $default  reduce using rule 25 (func_dec)


State 251

   14 include_dec: '#' INCLUDE LESS_OP ID '.' ID . GREAT_OP

    GREAT_OP  shift, and go to state 273


State 252

  184 param_list: param_list ',' data_type ID .

    $default  reduce using rule 184 (param_list)


State 253

   44 micro_val: ID '(' error ';' .

    $default  reduce using rule 44 (micro_val)


State 254

   59 arg_list: arg_list error .

    $default  reduce using rule 59 (arg_list)


State 255

   42 micro_val: ID '(' arg_list ')' .

    $default  reduce using rule 42 (micro_val)


State 256

   57 arg_list: arg_list ',' . arg

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 209
    CHAR_LIT  shift, and go to state 62

    arg       go to state 274
    constant  go to state 213


State 257

   43 micro_val: ID '[' expr ']' .

    $default  reduce using rule 43 (micro_val)


State 258

  164 expr_stmnt_list: expr_stmnt_list ',' . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 275
    unary_op   go to state 87
    constant   go to state 99


State 259

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma . expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt

    error     shift, and go to state 276
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val             go to state 85
    expr                  go to state 277
    unary_op              go to state 87
    expr_stmnt_list_cond  go to state 278
    constant              go to state 99


State 260

  157 loop_stmnt: WHILE '(' expr ')' . compound_stmnt
  160           | WHILE '(' expr ')' . error

    error  shift, and go to state 279
    '{'    shift, and go to state 82

    compound_stmnt  go to state 280
    _LCB            go to state 92


State 261

  141 condition_stmnt: IF '(' expr ')' . compound_stmnt
  142                | IF '(' expr ')' . compound_stmnt ELSE compound_stmnt
  143                | IF '(' expr ')' . compound_stmnt elif_list ELSE compound_stmnt
  144                | IF '(' expr ')' . compound_stmnt elif_list

    '{'  shift, and go to state 82

    compound_stmnt  go to state 281
    _LCB            go to state 92


State 262

  158 loop_stmnt: DO compound_stmnt WHILE '(' . expr ')' ';'

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 282
    unary_op   go to state 87
    constant   go to state 99


State 263

  176 exit_stmnt: EXIT '(' ')' semi_comma .

    $default  reduce using rule 176 (exit_stmnt)


State 264

  107 io_stmnt: GETFLOAT '(' arg_get_float ')' . ';'

    ';'  shift, and go to state 283


State 265

  108 io_stmnt: GETINT '(' arg_get_int ')' . ';'

    ';'  shift, and go to state 284


State 266

  106 io_stmnt: GETSTRING '(' arg_get_str ')' .

    $default  reduce using rule 106 (io_stmnt)


State 267

  103 io_stmnt: PRINTSTR '(' arg_printstr ')' . ';'

    ';'  shift, and go to state 285


State 268

  105 io_stmnt: PRINTFLOAT '(' arg_print_float ')' . ';'

    ';'  shift, and go to state 286


State 269

  104 io_stmnt: PRINTINT '(' arg_print_int ')' . ';'

    ';'  shift, and go to state 287


State 270

  145 condition_stmnt: SWITCH '(' expr ')' . '{' switch_stmnt_list '}'

    '{'  shift, and go to state 288


State 271

   56 expr: '(' expr ')' ERROR . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 289
    unary_op   go to state 87
    constant   go to state 99


State 272

   51 expr: '(' expr ')' operators . expr
   54     | '(' expr ')' operators . error

    error     shift, and go to state 290
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 291
    unary_op   go to state 87
    constant   go to state 99


State 273

   14 include_dec: '#' INCLUDE LESS_OP ID '.' ID GREAT_OP .

    $default  reduce using rule 14 (include_dec)


State 274

   57 arg_list: arg_list ',' arg .

    $default  reduce using rule 57 (arg_list)


State 275

  164 expr_stmnt_list: expr_stmnt_list ',' expr .

    $default  reduce using rule 164 (expr_stmnt_list)


State 276

  169 expr_stmnt_list_cond: error .

    $default  reduce using rule 169 (expr_stmnt_list_cond)


State 277

  168 expr_stmnt_list_cond: expr .

    $default  reduce using rule 168 (expr_stmnt_list_cond)


State 278

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond . semi_comma expr_stmnt_list ')' compound_stmnt
  167 expr_stmnt_list_cond: expr_stmnt_list_cond . ',' expr

    error  shift, and go to state 118
    ';'    shift, and go to state 119
    ','    shift, and go to state 292

    semi_comma  go to state 293


State 279

  160 loop_stmnt: WHILE '(' expr ')' error .

    $default  reduce using rule 160 (loop_stmnt)


State 280

  157 loop_stmnt: WHILE '(' expr ')' compound_stmnt .

    $default  reduce using rule 157 (loop_stmnt)


State 281

  141 condition_stmnt: IF '(' expr ')' compound_stmnt .
  142                | IF '(' expr ')' compound_stmnt . ELSE compound_stmnt
  143                | IF '(' expr ')' compound_stmnt . elif_list ELSE compound_stmnt
  144                | IF '(' expr ')' compound_stmnt . elif_list

    ELSE  shift, and go to state 294
    ELIF  shift, and go to state 295

    $default  reduce using rule 141 (condition_stmnt)

    elif_list   go to state 296
    elseifpart  go to state 297


State 282

  158 loop_stmnt: DO compound_stmnt WHILE '(' expr . ')' ';'

    ')'  shift, and go to state 298


State 283

  107 io_stmnt: GETFLOAT '(' arg_get_float ')' ';' .

    $default  reduce using rule 107 (io_stmnt)


State 284

  108 io_stmnt: GETINT '(' arg_get_int ')' ';' .

    $default  reduce using rule 108 (io_stmnt)


State 285

  103 io_stmnt: PRINTSTR '(' arg_printstr ')' ';' .

    $default  reduce using rule 103 (io_stmnt)


State 286

  105 io_stmnt: PRINTFLOAT '(' arg_print_float ')' ';' .

    $default  reduce using rule 105 (io_stmnt)


State 287

  104 io_stmnt: PRINTINT '(' arg_print_int ')' ';' .

    $default  reduce using rule 104 (io_stmnt)


State 288

  145 condition_stmnt: SWITCH '(' expr ')' '{' . switch_stmnt_list '}'

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    CASE        shift, and go to state 299
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82

    data_type           go to state 84
    micro_val           go to state 85
    expr                go to state 86
    unary_op            go to state 87
    stmnt               go to state 300
    io_stmnt            go to state 90
    labeled_stmnt       go to state 301
    compound_stmnt      go to state 91
    _LCB                go to state 92
    condition_stmnt     go to state 94
    switch_stmnt        go to state 302
    switch_stmnt_list   go to state 303
    switch_stmnt_list1  go to state 304
    loop_stmnt          go to state 95
    expr_stmnt          go to state 96
    jump_stmnt          go to state 97
    exit_stmnt          go to state 98
    constant            go to state 99
    dec                 go to state 100


State 289

   56 expr: '(' expr ')' ERROR expr .

    $default  reduce using rule 56 (expr)


State 290

   54 expr: '(' expr ')' operators error .

    $default  reduce using rule 54 (expr)


State 291

   51 expr: '(' expr ')' operators expr .

    $default  reduce using rule 51 (expr)


State 292

  167 expr_stmnt_list_cond: expr_stmnt_list_cond ',' . expr

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 305
    unary_op   go to state 87
    constant   go to state 99


State 293

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma . expr_stmnt_list ')' compound_stmnt

    error     shift, and go to state 217
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val        go to state 85
    expr             go to state 218
    unary_op         go to state 87
    expr_stmnt_list  go to state 306
    constant         go to state 99


State 294

  142 condition_stmnt: IF '(' expr ')' compound_stmnt ELSE . compound_stmnt

    '{'  shift, and go to state 82

    compound_stmnt  go to state 307
    _LCB            go to state 92


State 295

  150 elif_list: ELIF . error
  151 elseifpart: ELIF . '(' expr ')' compound_stmnt

    error  shift, and go to state 308
    '('    shift, and go to state 309


State 296

  143 condition_stmnt: IF '(' expr ')' compound_stmnt elif_list . ELSE compound_stmnt
  144                | IF '(' expr ')' compound_stmnt elif_list .
  148 elif_list: elif_list . elseifpart

    ELSE  shift, and go to state 310
    ELIF  shift, and go to state 311

    $default  reduce using rule 144 (condition_stmnt)

    elseifpart  go to state 312


State 297

  149 elif_list: elseifpart .

    $default  reduce using rule 149 (elif_list)


State 298

  158 loop_stmnt: DO compound_stmnt WHILE '(' expr ')' . ';'

    ';'  shift, and go to state 313


State 299

  124 labeled_stmnt: CASE . constant colon
  125              | CASE . error

    error     shift, and go to state 314
    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    CHAR_LIT  shift, and go to state 62

    constant  go to state 315


State 300

  153 switch_stmnt: stmnt .

    $default  reduce using rule 153 (switch_stmnt)


State 301

  152 switch_stmnt: labeled_stmnt .

    $default  reduce using rule 152 (switch_stmnt)


State 302

  156 switch_stmnt_list1: switch_stmnt .

    $default  reduce using rule 156 (switch_stmnt_list1)


State 303

  145 condition_stmnt: SWITCH '(' expr ')' '{' switch_stmnt_list . '}'

    '}'  shift, and go to state 316


State 304

  154 switch_stmnt_list: switch_stmnt_list1 . otwise_stmnt
  155 switch_stmnt_list1: switch_stmnt_list1 . switch_stmnt

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    CASE        shift, and go to state 299
    OTHERWISE   shift, and go to state 317
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82

    $default  reduce using rule 128 (otwise_stmnt)

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt            go to state 300
    io_stmnt         go to state 90
    labeled_stmnt    go to state 301
    otwise_stmnt     go to state 318
    compound_stmnt   go to state 91
    _LCB             go to state 92
    condition_stmnt  go to state 94
    switch_stmnt     go to state 319
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 305

  167 expr_stmnt_list_cond: expr_stmnt_list_cond ',' expr .

    $default  reduce using rule 167 (expr_stmnt_list_cond)


State 306

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list . ')' compound_stmnt
  164 expr_stmnt_list: expr_stmnt_list . ',' expr

    ')'  shift, and go to state 320
    ','  shift, and go to state 258


State 307

  142 condition_stmnt: IF '(' expr ')' compound_stmnt ELSE compound_stmnt .

    $default  reduce using rule 142 (condition_stmnt)


State 308

  150 elif_list: ELIF error .

    $default  reduce using rule 150 (elif_list)


State 309

  151 elseifpart: ELIF '(' . expr ')' compound_stmnt

    NUMBER    shift, and go to state 57
    DECIMAL   shift, and go to state 58
    BOOLEAN   shift, and go to state 59
    STR_LIT   shift, and go to state 60
    ID        shift, and go to state 61
    CHAR_LIT  shift, and go to state 62
    '('       shift, and go to state 79
    '!'       shift, and go to state 80
    '~'       shift, and go to state 81

    micro_val  go to state 85
    expr       go to state 321
    unary_op   go to state 87
    constant   go to state 99


State 310

  143 condition_stmnt: IF '(' expr ')' compound_stmnt elif_list ELSE . compound_stmnt

    '{'  shift, and go to state 82

    compound_stmnt  go to state 322
    _LCB            go to state 92


State 311

  151 elseifpart: ELIF . '(' expr ')' compound_stmnt

    '('  shift, and go to state 309


State 312

  148 elif_list: elif_list elseifpart .

    $default  reduce using rule 148 (elif_list)


State 313

  158 loop_stmnt: DO compound_stmnt WHILE '(' expr ')' ';' .

    $default  reduce using rule 158 (loop_stmnt)


State 314

  125 labeled_stmnt: CASE error .

    $default  reduce using rule 125 (labeled_stmnt)


State 315

  124 labeled_stmnt: CASE constant . colon

    error  shift, and go to state 323
    ':'    shift, and go to state 324

    colon  go to state 325


State 316

  145 condition_stmnt: SWITCH '(' expr ')' '{' switch_stmnt_list '}' .

    $default  reduce using rule 145 (condition_stmnt)


State 317

  126 otwise_stmnt: OTHERWISE . colon stmnt_list
  127             | OTHERWISE . error

    error  shift, and go to state 326
    ':'    shift, and go to state 324

    colon  go to state 327


State 318

  154 switch_stmnt_list: switch_stmnt_list1 otwise_stmnt .

    $default  reduce using rule 154 (switch_stmnt_list)


State 319

  155 switch_stmnt_list1: switch_stmnt_list1 switch_stmnt .

    $default  reduce using rule 155 (switch_stmnt_list1)


State 320

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' . compound_stmnt

    '{'  shift, and go to state 82

    compound_stmnt  go to state 328
    _LCB            go to state 92


State 321

  151 elseifpart: ELIF '(' expr . ')' compound_stmnt

    ')'  shift, and go to state 329


State 322

  143 condition_stmnt: IF '(' expr ')' compound_stmnt elif_list ELSE compound_stmnt .

    $default  reduce using rule 143 (condition_stmnt)


State 323

  130 colon: error .

    $default  reduce using rule 130 (colon)


State 324

  129 colon: ':' .

    $default  reduce using rule 129 (colon)


State 325

  124 labeled_stmnt: CASE constant colon .

    $default  reduce using rule 124 (labeled_stmnt)


State 326

  127 otwise_stmnt: OTHERWISE error .
  130 colon: error .

    '}'       reduce using rule 127 (otwise_stmnt)
    $default  reduce using rule 130 (colon)


State 327

  126 otwise_stmnt: OTHERWISE colon . stmnt_list

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt_list       go to state 330
    stmnt            go to state 89
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 328

  159 loop_stmnt: FOR '(' expr_stmnt_list semi_comma expr_stmnt_list_cond semi_comma expr_stmnt_list ')' compound_stmnt .

    $default  reduce using rule 159 (loop_stmnt)


State 329

  151 elseifpart: ELIF '(' expr ')' . compound_stmnt

    '{'  shift, and go to state 82

    compound_stmnt  go to state 331
    _LCB            go to state 92


State 330

   94 stmnt_list: stmnt_list . stmnt
  126 otwise_stmnt: OTHERWISE colon stmnt_list .

    NUMBER      shift, and go to state 57
    DECIMAL     shift, and go to state 58
    BOOLEAN     shift, and go to state 59
    STR_LIT     shift, and go to state 60
    ID          shift, and go to state 61
    CHAR_LIT    shift, and go to state 62
    INT         shift, and go to state 46
    FLOAT       shift, and go to state 7
    CHAR        shift, and go to state 8
    BOOL        shift, and go to state 9
    STRING      shift, and go to state 11
    BREAK       shift, and go to state 63
    CONTINUE    shift, and go to state 64
    RETURN      shift, and go to state 65
    FOR         shift, and go to state 66
    WHILE       shift, and go to state 67
    IF          shift, and go to state 68
    DO          shift, and go to state 69
    EXIT        shift, and go to state 70
    GETFLOAT    shift, and go to state 71
    GETINT      shift, and go to state 72
    GETSTRING   shift, and go to state 73
    PRINTSTR    shift, and go to state 74
    PRINTFLOAT  shift, and go to state 75
    PRINTINT    shift, and go to state 76
    SWITCH      shift, and go to state 77
    ';'         shift, and go to state 78
    '('         shift, and go to state 79
    '!'         shift, and go to state 80
    '~'         shift, and go to state 81
    '{'         shift, and go to state 82

    $default  reduce using rule 126 (otwise_stmnt)

    data_type        go to state 84
    micro_val        go to state 85
    expr             go to state 86
    unary_op         go to state 87
    stmnt            go to state 191
    io_stmnt         go to state 90
    compound_stmnt   go to state 91
    _LCB             go to state 92
    condition_stmnt  go to state 94
    loop_stmnt       go to state 95
    expr_stmnt       go to state 96
    jump_stmnt       go to state 97
    exit_stmnt       go to state 98
    constant         go to state 99
    dec              go to state 100


State 331

  151 elseifpart: ELIF '(' expr ')' compound_stmnt .

    $default  reduce using rule 151 (elseifpart)
